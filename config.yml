introspection: https://api.page365.net/v1.0/graphql

servers:
  - url: https://api.staging365.net/v1.0/graphql
    description: Development
  - url:  https://api.page365.net/v1.0/graphql
    description: Production

info:
  title: Page365 API
  description: |
    Welcome to Page365 API. Page365 allow access to merchant information on Page365 ecosystem by external software (API) for the greater service and merchant convenience.

    This API  use GraphQL as standard protocol. Implement by follow document below.

domains:
  - name: Registation
    description: |
      Before using API, you need to register your app profile and get approve by Page365 and we will send you SECRET_KEY for using in authentication process as flowchart below.
    diagram_image_name: registration.png
    usecases:
    - name: Create profile
      description: Create profile for using in authentication process and grant permission to fetch merchant information. These argument some will be display to merchant for notify them that your integration is available such as name, some will be use for report and notify an update (deprecate API) such as phone and email, some will be use for sending an event when have occurred on merchant accounts such as webhookUrl
      query: mutation.createPublicApp
  - name: Authentication
    description: |
      After profile approved, Page365 will send you SECRET_KEY which will be use as part of access token creating process. Access token is needed for every request as an identifier and each merchant will use difference unique access token even from the same profile.
      
      In access token creation process you will need 2 parameters (SECRET_KEY, MERCHANT_TOKEN) you can find MERCHANT_TOKEN from each merchant directly and
      
      PROVIDER NEEDS TO KEEP MERCHANT_TOKEN IN PRIVATE AND NOT ALLOW TO PUBLIC TOKEN TO OTHER
    diagram_image_name: authentication.png
    usecases:
    - name: Generate access token
      description: Generate access token for using in identification when calling API
      query: query.generateToken
  - name: Webhooks
    description: |
      After the profile is approved and allowed by the merchant account, Page365 will send an event that has occurred on the merchant account.

      Validating Payloads: - 
        Every webhook will have SHA1 signature included in the request's X-Hub-Signature header, preceded with sha1=. You don't have to validate the payload, but you should.
      
      To validate the payload: - 
        Generate a SHA1 signature using the payload and your secret_key - Compare your signature to the signature in the X-Hub-Signature header (everything after sha1=). If the signatures match, the payload is genuine.

      HTTP method: - Use POST http method for send to webhook url.
    sections:
      - name: "Order event"
        desc: | 
          Page365 will send to webhook url an order object when the order has updated or created.
        webhook_body:
          - field: key
            type: String
            desc: event type should be "order.create" for create event and "order.update" for update event
          - field: merchantToken
            type: String
            desc: a token reference with the merchant account.
          - field: body
            type: Order object
            desc: an order object.
        sub_body:
          - section_name: Order object
            fields:
              - field: id
                type: ID
                desc: Unique object reference number.
              - field: stage
                type: String
                desc: Can be (draft, unpaid, transferred, paid, shipped).
              - field: createdAt
                type: ISO8601DateTime
                desc: Timestamp when order create.
              - field: note
                type: String
                desc: Note.
              - field: shippingCost
                type: Float
                desc: Delivery cost in baht.
              - field: discount
                type: Float
                desc: Discount.
              - field: subtotal
                type: Float
                desc: Sum of items price.
              - field: total
                type: Float
                desc: Final price which send to customer.
              - field: "no"
                type: Int
                desc: No.
              - field: expiresOn
                type: ISO8601DateTime
                desc: Expire date.
              - field: paidAmount
                type: Float
                desc: Total amount paid by customer.
              - field: paidAt
                type: ISO8601DateTime
                desc: Timestamp when customer paid.
              - field: slug
                type: String
                desc: Slug.
              - field: trackingCode
                type: String
                desc: Delivery tracking code.
              - field: itemsCount
                type: Int
                desc: Number of item in this order.
              - field: shippingOption
                type: String
                desc: Shipping title.
              - field: sent
                type: Boolean
                desc: True if customer already receive order inform.
              - field: sold
                type: Boolean
                desc: Customer already paid (stage paid, shipped).
              - field: promotionCode
                type: String
                desc: Promotion code which be use in this order.
              - field: vat
                type: Float
                desc: Vat amount.
              - field: vatIncluded
                type: Boolean
                desc: Vat include.
              - field: taxInvoiceNo
                type: String
                desc: Tax no.
              - field: customerName
                type: String
                desc: customer name.
              - field: customerAddress
                type: String
                desc: customer address.
              - field: customerEmail
                type: String
                desc: customer email.
              - field: customerPhone
                type: String
                desc: customer phone.
              - field: auto
                type: Boolean
                desc: Create by CF feature.
              - field: url
                type: String
                desc: Detail link.
              - field: items
                type: "Array<OrderItem> "
                desc: Items in order.
              - field: bankAccount
                type: BankAccount Object
                desc: Bank account for this order payment.
              - field: paymentSlip
                type: PaymentSlip Object
                desc: Payment slip.
          - section_name: OrderItem object
            fields:
              - field: id
                type: ID
                desc: Unique object reference number.
              - field: name
                type: String
                desc: Name.
              - field: note
                type: String
                desc: Note.
              - field: quantity
                type: Int
                desc: Quantity.
              - field: price
                type: Float
                desc: Price.
              - field: subtotal
                type: Float
                desc: Sum of items price.
              - field: productId
                type: ID
                desc: Unique object reference number of product.
          - section_name: BankAccount object
            fields:
              - field: id
                type: ID
                desc: Unique object reference number.
              - field: "no"
                type: String
                desc: Bank account number.
              - field: name
                type: String
                desc: Name.
              - field: bankSlug
                type: String
                desc: Provider code.
          - section_name: PaymentSlip object
            fields:
              - field: statusCode
                type: Int
                desc: Verify code.
              - field: createdAt
                type: ISO8601DateTime
                desc: Create at.
              - field: updatedAt
                type: ISO8601DateTime
                desc: Update at.
        example_link: https://gist.github.com/jaikox2/aff78611b25f33eaa242e85a2715062e.js
      - name: "Order item event"
        desc: |
          Page365 will send to webhook url a order item object when the customer has updated or created.
        webhook_body:
          - field: key
            type: String
            desc: event type should be "orderitem.create" for create event and "orderitem.update" for update event
          - field: merchantToken
            type: String
            desc: a token reference with the merchant account.
          - field: body
            type: Order item object
            desc: an order item object.
        sub_body:
          - section_name: OrderItem object
            fields:
              - field: id
                type: ID
                desc: Unique object reference number.
              - field: name
                type: String
                desc: Name.
              - field: note
                type: String
                desc: Note.
              - field: quantity
                type: Int
                desc: Quantity.
              - field: price
                type: Float
                desc: Price.
              - field: subtotal
                type: Float
                desc: Sum of items price.
              - field: productId
                type: ID
                desc: Unique object reference number of product.
              - field: orderId
                type: ID
                desc: Unique object reference number of order.
        example_link: https://gist.github.com/spnve/79e479e82ed06443c9a5e0b2c2cc20c9.js
      - name: "Bank account event"
        desc: |
          Page365 will send to webhook url a bank account object when the bank account has updated or created.
        webhook_body:
          - field: key
            type: String
            desc: event type should be "bankaccount.create" for create event and "bankaccount.update" for update event
          - field: merchantToken
            type: String
            desc: a token reference with the merchant account.
          - field: body
            type: Bank account object
            desc: an bank account object.
        sub_body:
          - section_name: BankAccount object
            fields:
              - field: id
                type: ID
                desc: Unique object reference number.
              - field: "no"
                type: String
                desc: Bank account number.
              - field: name
                type: String
                desc: Name.
              - field: bankSlug
                type: String
                desc: Provider code.
        example_link: https://gist.github.com/spnve/dc9085f6dc4769a633bc6d3b0b18a86f.js
      - name: "Customer event"
        desc: | 
          Page365 will send to webhook url a customer object when the customer has updated or created.
        webhook_body:
          - field: key
            type: String
            desc: event type should be "customer.create" for create event and "customer.update" for update event
          - field: merchantToken
            type: String
            desc: a token reference with the merchant account.
          - field: body
            type: customer object
            desc: a customer object.
        sub_body:
          - section_name: Customer object
            fields:
              - field: id
                type: ID
                desc: Unique object reference number.
              - field: name
                type: String
                desc: Name.
              - field: phone
                type: String
                desc: Phone.
              - field: email
                type: String
                desc: Email.
              - field: address
                type: String
                desc: Address.
              - field: note
                type: String
                desc: Note.
              - field: type
                type: String
                desc: Plateform which customer come from.
              - field: tags
                type: "Array<tag>"
                desc: Customer tags.
          - section_name: Tag object
            fields:
              - field: id
                type: ID
                desc: Unique object reference number.
              - field: name
                type: String
                desc: Name.
        example_link: https://gist.github.com/jaikox2/657df7686bab584abdeb6162fb8194e0.js
  - name: Product
    description: Fetch merchant product information
    usecases:
    - name: Fetch products
      description: Fetch all product information owned by merchant
      query: query.products
      require: token
    - name: Fetch product
      description: Fetch product information by id
      query: query.product
      require: id,token
  - name: Product Category
    description: Fetch merchant product category information
    usecases:
    - name: Fetch product categories
      description: Fetch all product category information owned by merchant
      query: query.productCategories
      require: id,token
    - name: Fetch product category
      description: Fetch product category information by id
      query: query.productCategory
      require: id,token
  - name: Order
    description: Fetch merchant order information
    usecases:
    - name: Fetch orders
      description: Fetch all order information owned by merchant
      query: query.orders
      require: token
    - name: Fetch order
      description: Fetch order information by id
      query: query.order
      require: id,token
  - name: Customer
    description: Fetch merchant customer information
    usecases:
    - name: Fetch customers
      description: Fetch all customer information owned by merchant
      query: query.customers
      require: token
    - name: Fetch customer
      description: Fetch customer information by id
      query: query.customer
      require: id,token
  - name: Bank
    description: Fetch bank account information
    usecases:
    - name: Fetch banks
      description: Fetch all bank account information owned by merchant
      query: query.bankAccounts
      require: id,token

schema:
  except: [
    'Account', 'Home', 'Plan', 'PageInfo',
  ]